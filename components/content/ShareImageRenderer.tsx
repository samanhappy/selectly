import React from 'react';

export interface ShareImageRendererProps {
  selectedText: string;
  pageTitle: string;
  pageUrl: string;
  qrDataUrl?: string;
  width?: number;
  padding?: number;
  backgroundColor?: string;
  textColor?: string;
  accentColor?: string;
}

export const ShareImageRenderer: React.FC<ShareImageRendererProps> = ({
  selectedText,
  pageTitle,
  pageUrl,
  qrDataUrl,
  width,
  padding,
  backgroundColor = '#ffffff',
  textColor = '#2c3e50',
  accentColor = '#3498db',
}) => {
  const contentMaxWidth = width - padding * 2;

  // Function to handle paragraph spacing
  const renderSelectedText = (text: string) => {
    const sanitizedText = sanitizeSelectedText(text);
    const paragraphs = sanitizedText.split('\n').filter((p) => p.trim() !== '');
    if (paragraphs.length <= 1) {
      // Single paragraph or no paragraph breaks
      return sanitizedText;
    }

    // Multiple paragraphs, separated with appropriate spacing
    return paragraphs.map((paragraph, index) => (
      <React.Fragment key={index}>
        {paragraph.trim()}
        {index < paragraphs.length - 1 && <div style={{ height: '12px' }} />}
      </React.Fragment>
    ));
  };

  return (
    <div
      style={{
        background: '#ffffff',
        borderRadius: 16,
        padding: '16px 32px',
        width: `${contentMaxWidth}px`,
        boxShadow: '0 20px 40px rgba(0, 0, 0, 0.1)',
        position: 'relative',
        overflow: 'hidden',
        boxSizing: 'border-box',
        fontFamily:
          '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif',
      }}
    >
      {/* Top gradient bar */}
      <div
        style={{
          content: '',
          position: 'absolute',
          top: 0,
          left: 0,
          right: 0,
          height: 4,
          background: 'linear-gradient(90deg, #ff6b6b, #4ecdc4, #45b7d1, #96ceb4)',
        }}
      />

      {/* Selected text */}
      <div
        style={{
          fontSize: 20,
          lineHeight: 1.4, // 从 1.6 减小到 1.4
          color: textColor,
          marginBottom: 0,
          fontWeight: 400,
          position: 'relative',
          paddingLeft: 20,
          borderLeft: `3px solid ${accentColor}`,
          whiteSpace: 'pre-wrap',
          wordBreak: 'break-word',
        }}
      >
        {renderSelectedText(selectedText)}
      </div>

      {/* Source info + QR - new layout strategy */}
      <div style={{ marginBottom: 0 }}>
        {qrDataUrl ? (
          // With QR code: left side title + bottom info, right side QR code bottom-aligned
          <div
            style={{
              display: 'flex',
              alignItems: 'flex-end', // 底部对齐
              justifyContent: 'space-between',
              gap: 16,
            }}
          >
            {/* 左侧：标题 + 底部信息（垂直排列） */}
            <div
              style={{
                flex: 1,
                display: 'flex',
                flexDirection: 'column',
                gap: 8,
              }}
            >
              {/* 标题 */}
              <div
                style={{
                  display: 'flex',
                  alignItems: 'center',
                  overflow: 'hidden',
                  textOverflow: 'ellipsis',
                  fontSize: 16,
                  fontWeight: 500,
                  color: '#475569',
                }}
                title={pageTitle}
              >
                <span style={{ marginRight: 8 }}>🔗</span>
                <span style={{ overflow: 'hidden', textOverflow: 'ellipsis' }}>{pageTitle}</span>
              </div>

              {/* 底部信息 */}
              <div
                style={{
                  display: 'flex',
                  alignItems: 'center',
                  gap: 12,
                }}
              >
                <div
                  style={{
                    display: 'flex',
                    alignItems: 'center',
                    color: '#7f8c8d',
                    fontSize: 14,
                    whiteSpace: 'nowrap',
                  }}
                >
                  <div
                    style={{
                      width: 18,
                      height: 18,
                      background: 'linear-gradient(45deg, #667eea, #764ba2)',
                      borderRadius: '50%',
                      marginRight: 6,
                      display: 'flex',
                      alignItems: 'center',
                      justifyContent: 'center',
                      color: 'white',
                      fontWeight: 'bold',
                      fontSize: 9,
                    }}
                  >
                    S
                  </div>
                  <span>Generated by Selectly</span>
                </div>

                <div
                  style={{
                    color: '#bdc3c7',
                    fontSize: 12,
                    whiteSpace: 'nowrap',
                  }}
                >
                  {new Date().toLocaleString()}
                </div>
              </div>
            </div>

            {/* 右侧：二维码 */}
            <div
              style={{
                flex: 'none',
                padding: 6,
                borderRadius: 8,
                background: '#ffffff',
                border: '1px solid #e2e8f0',
                boxShadow: '0 2px 8px rgba(0,0,0,0.06)',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
              }}
              aria-label="QR code for page"
            >
              <img
                src={qrDataUrl}
                alt={`QR for ${pageUrl}`}
                style={{ width: 64, height: 64, display: 'block' }}
              />
            </div>
          </div>
        ) : (
          // Without QR code: single-line compact layout
          <div
            style={{
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'space-between',
              gap: 16,
            }}
          >
            <div
              style={{
                flex: 1,
                display: 'flex',
                alignItems: 'center',
                overflow: 'hidden',
                textOverflow: 'ellipsis',
                whiteSpace: 'nowrap',
                fontSize: 16,
                fontWeight: 500,
                color: '#475569',
              }}
              title={pageTitle}
            >
              <span style={{ marginRight: 8 }}>🔗</span>
              <span style={{ overflow: 'hidden', textOverflow: 'ellipsis' }}>{pageTitle}</span>
            </div>

            <div
              style={{
                display: 'flex',
                alignItems: 'center',
                gap: 12,
              }}
            >
              <div
                style={{
                  display: 'flex',
                  alignItems: 'center',
                  color: '#7f8c8d',
                  fontSize: 14,
                  whiteSpace: 'nowrap',
                }}
              >
                <div
                  style={{
                    width: 18,
                    height: 18,
                    background: 'linear-gradient(45deg, #667eea, #764ba2)',
                    borderRadius: '50%',
                    marginRight: 6,
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    color: 'white',
                    fontWeight: 'bold',
                    fontSize: 9,
                  }}
                >
                  S
                </div>
                <span>Generated by Selectly</span>
              </div>

              <div
                style={{
                  color: '#bdc3c7',
                  fontSize: 12,
                  whiteSpace: 'nowrap',
                }}
              >
                {new Date().toLocaleDateString('zh-CN')}
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

function sanitizeSelectedText(text: string): string {
  const lines = text.split('\n').filter((line) => line.trim() !== '');
  const trimmed = lines.join('\n').trim();
  const openingQuotes = ['"', '"', '„', '«', '『', '「'];
  const closingQuotes = ['"', '"', '»', '』', '」'];

  let start = 0;
  let end = trimmed.length;

  if (trimmed && openingQuotes.includes(trimmed[0])) {
    start = 1;
  }
  if (end - start > 0 && closingQuotes.includes(trimmed[end - 1])) {
    end = end - 1;
  }
  return trimmed.slice(start, end).trim();
}

export default ShareImageRenderer;
